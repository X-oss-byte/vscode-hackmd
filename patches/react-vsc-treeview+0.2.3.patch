diff --git a/node_modules/react-vsc-treeview/dist/TreeItem.d.ts b/node_modules/react-vsc-treeview/dist/TreeItem.d.ts
index 9cbe59e..12a1400 100644
--- a/node_modules/react-vsc-treeview/dist/TreeItem.d.ts
+++ b/node_modules/react-vsc-treeview/dist/TreeItem.d.ts
@@ -4,7 +4,7 @@
  */
 import * as vscode from 'vscode';
 import React from 'react';
-declare const TreeItem: React.FC<TreeItemProps>;
+declare const TreeItem: (props: TreeItemProps) => JSX.Element;
 export default TreeItem;
 export interface TreeItemProps {
     label?: string;
@@ -19,5 +19,8 @@ export interface TreeItemProps {
     command?: string | vscode.Command;
     contextValue?: string;
     expanded?: boolean;
+    context?: Record<string, any>
+    key?: any;
+    children?: React.ReactNode;
 }
 //# sourceMappingURL=TreeItem.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-vsc-treeview/dist/TreeItem.js b/node_modules/react-vsc-treeview/dist/TreeItem.js
index 91d695c..ab6698d 100644
--- a/node_modules/react-vsc-treeview/dist/TreeItem.js
+++ b/node_modules/react-vsc-treeview/dist/TreeItem.js
@@ -29,7 +29,7 @@ Object.defineProperty(exports, "__esModule", { value: true });
 const vscode = __importStar(require("vscode"));
 const react_1 = __importStar(require("react"));
 const VSCTreeItem_1 = __importDefault(require("./VSCTreeItem"));
-const TreeItem = ({ label = '', id, iconPath, description, resourceUri, tooltip, command: rawCommand, contextValue, expanded, children }) => {
+const TreeItem = ({ label = '', id, iconPath, description, resourceUri, tooltip, command: rawCommand, contextValue, expanded, children, context }) => {
     const collapsibleState = react_1.useMemo(() => {
         if (children == null) {
             return vscode.TreeItemCollapsibleState.None;
@@ -56,7 +56,8 @@ const TreeItem = ({ label = '', id, iconPath, description, resourceUri, tooltip,
         tooltip,
         command,
         collapsibleState,
-        contextValue
+        contextValue,
+        context
     };
     return react_1.default.createElement(VSCTreeItem_1.default, Object.assign({}, vscTreeItemProps), children);
 };
diff --git a/node_modules/react-vsc-treeview/dist/VSCTreeItem.js b/node_modules/react-vsc-treeview/dist/VSCTreeItem.js
index 9f3174b..4504944 100644
--- a/node_modules/react-vsc-treeview/dist/VSCTreeItem.js
+++ b/node_modules/react-vsc-treeview/dist/VSCTreeItem.js
@@ -16,6 +16,6 @@ const VSCTreeItem = (props) => {
 exports.default = VSCTreeItem;
 exports.propKeys = [
     'label', 'id', 'iconPath', 'description', 'resourceUri', 'tooltip',
-    'command', 'collapsibleState', 'contextValue', 'children'
+    'command', 'collapsibleState', 'contextValue', 'children', 'context'
 ];
 //# sourceMappingURL=VSCTreeItem.js.map
\ No newline at end of file
diff --git a/node_modules/react-vsc-treeview/dist/reconciler.js b/node_modules/react-vsc-treeview/dist/reconciler.js
index 7ee5f2d..7b97e33 100644
--- a/node_modules/react-vsc-treeview/dist/reconciler.js
+++ b/node_modules/react-vsc-treeview/dist/reconciler.js
@@ -28,7 +28,7 @@ const VSCTreeItem_1 = require("./VSCTreeItem");
 exports.default = react_reconciler_1.default({
     supportsMutation: true,
     createInstance(_type, props, container) {
-        const { label = '', id, iconPath, description, resourceUri, tooltip, command, collapsibleState, contextValue } = props;
+        const { label = '', id, iconPath, description, resourceUri, tooltip, command, collapsibleState, contextValue, context } = props;
         const treeItem = new vscode.TreeItem(label, collapsibleState);
         treeItem.id = id;
         treeItem.iconPath = iconPath;
@@ -37,6 +37,7 @@ exports.default = react_reconciler_1.default({
         treeItem.tooltip = tooltip;
         treeItem.command = command;
         treeItem.contextValue = contextValue;
+        treeItem.context = context;
         return container.createTreeItem(treeItem);
     },
     appendChildToContainer(container, child) {
